
# 单库水平分表

# 配置数据源，给数据源起名称
spring.shardingsphere.datasource.names=db1

# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true

# 配置数据源具体内容
# 包含连接池，驱动，地址，用户名和密码
spring.shardingsphere.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db1.url=
spring.shardingsphere.datasource.db1.username=
spring.shardingsphere.datasource.db1.password=

# 指定course表分布情况,配置表在哪个数据库里面
# 表名称都是什么 db1.course_0 db1.course_1
spring.shardingsphere.sharding.tables.course.actual-data-nodes=db1.course_${0..1}

# 指定course表里面主键cid 生成策略
# SNOWFLAKE(雪花算法)
spring.shardingsphere.sharding.tables.course.key-generator.column=cid
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE

# 指定表分片策略
# 约定cid值偶数添加到course_1表，如果cid是奇数添加到course_2表
spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=cid
spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_${ cid %2 }

# 打开sql输出日志
spring.shardingsphere.props.sql.show=true
